{\rtf1\ansi\ansicpg949\cocoartf1504
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red0\green150\blue149;\red51\green51\blue51;\red51\green100\blue164;
\red136\green136\blue136;\red245\green125\blue0;}
{\*\expandedcolortbl;\csgray\c100000;\csgenericrgb\c0\c58824\c58431;\csgenericrgb\c20000\c20000\c20000;\csgenericrgb\c20000\c39216\c64314;
\csgenericrgb\c53333\c53333\c53333;\csgenericrgb\c96078\c49020\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 using\cf3  UnityEngine;\uc0\u8232 \cf2 using\cf3  System.Collections;\uc0\u8232 \u8232 \cf2 public\cf3  \cf2 class\cf3  \cf4 PlanetGravity\cf3  : \cf4 MonoBehaviour\cf3  \{\uc0\u8232 \u8232 	\cf2 public\cf3  \cf4 Transform\cf3  TheSun;//
\f1 \'c5\'c2\'be\'e7\'c0\'c7
\f0  
\f1 \'c0\'a7\'c4\'a1\uc0\u8212 \'c7\'ca\'bf\'e4\'be\'f8\'b4\'f5\'b1\'ba\'bf\'e4
\f0 \uc0\u8232 	
\f2\i \cf5 //public char planet="Earth"\uc0\u8232 
\f0\i0 \cf3 	\cf2 public\cf3  \cf2 float\cf3  sunmass=\cf6 2000000\cf3 ;//
\f1 \'c5\'c2\'be\'e7\'c1\'fa\'b7\'ae
\f0 \uc0\u8232 	\cf2 public\cf3  \cf2 float\cf3  G=\cf6 0.00000000006674f\cf3 ;//
\f1 \'c1\'df\'b7\'c2\'bb\'f3\'bc\'f6
\f0 \uc0\u8232 	\cf2 public\cf3  \cf2 float\cf3  speed;//
\f1 \'c3\'ca\'b1\'e2\'bc\'d3\'b5\'b5
\f0 (
\f1 \'bf\'f8\'bf\'ee\'b5\'bf
\f0  
\f1 \'bc\'d3\'b5\'b5\'b8\'a6
\f0  
\f1 \'b0\'e8\'bb\'ea\'c7\'d8\'bc\'ad
\f0  
\f1 \'b3\'d6\'bd\'c0\'b4\'cf\'b4\'d9
\f0 )\uc0\u8232 		
\f2\i \cf5 // Use this for initialization\uc0\u8232 
\f0\i0 \cf3 		\cf2 void\cf3  Start () \{\uc0\u8232 		\cf4 Rigidbody\cf3  rb = GetComponent<\cf4 Rigidbody\cf3 > ();//
\f1 \'c0\'cc
\f0  
\f1 \'c4\'da\'b5\'e5\'b0\'a1
\f0  
\f1 \'b5\'e9\'be\'ee\'b0\'a1
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'b0\'b4\'c3\'bc\'c0\'c7
\f0  Rigidbody(
\f1 \'b0\'ad\'c3\'bc)\'bc\'d3\'bc\'ba\'c0\'bb \'b7\'ce\'b5\'e5\'c7\'d5\'b4\'cf\'b4\'d9. \'b0\'ad\'c3\'bc \'bc\'d3\'bc\'ba\'bf\'a1\'b4\'c2 \'c1\'fa\'b7\'ae, \'bc\'b1\'b8\'b6\'c2\'fb\'b0\'e8\'bc\'f6, \'b0\'a2\'b8\'b6\'c2\'fb\'b0\'e8\'bc\'f6 \'b5\'ee\'c0\'cc \'b5\'e9\'be\'ee\'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.
\f0 \uc0\u8232 		rb.velocity=\cf2 new\cf3  \cf4 Vector3\cf3  (\cf6 0\cf3 ,\cf6 0\cf3 ,speed);//
\f1 \'c3\'ca\'b1\'e2\'bc\'d3\'b5\'b5 \'bc\'b3\'c1\'a4
\f0 \uc0\u8232 	\}\u8232 \u8232 		
\f2\i \cf5 // Update is called once per frame\uc0\u8232 
\f0\i0 \cf3 	\cf2 void\cf3  Update () \{\uc0\u8232 	\cf4 Rigidbody\cf3  rb = GetComponent<\cf4 Rigidbody\cf3 > ();//
\f1 \'c0\'cc\'b0\'c5
\f0  
\f1 \'b3\'ca\'b9\'ab
\f0  
\f1 \'b4\'c0\'b8\'b0\'b5\'a5
\f0  
\f1 \'bf\'d6
\f0  
\f1 \'bf\'a9\'b1\'e2 \'b3\'d6\'be\'fa\'c1\'f6;;;\'bc\'f6\'c1\'a4\'c7\'ca\'bf\'e4
\f0 \uc0\u8232 		
\f2\i \cf5 //Vector3 Earth=GameObject.Find("Earth").transform.position;\uc0\u8232 
\f0\i0 \cf3 		\cf4 Vector3\cf3  Sun=\cf4 GameObject\cf3 .Find(\cf6 "TheSun"\cf3 ).transform.position; //\'91
\f1 TheSun\'a1\'af\'c0\'bb \'c3\'a3\'be\'c6\'bc\'ad \'b1\'d7 \'c0\'a7\'c4\'a1\'b8\'a6 \'b0\'a1\'c1\'ae\'bf\'c9\'b4\'cf\'b4\'d9(\'bf\'f8\'c1\'a1\'bf\'a1 \'b4\'eb\'c7\'d1 \'ba\'a4\'c5\'cd\'b7\'ce)
\f0 \uc0\u8232 		\cf4 Vector3\cf3  distvector = TheSun.position - transform.position;//
\f1 \'ba\'a4\'c5\'cd\'bb\'ac\'bc\'c0\'c0\'b8\'b7\'ce \'c5\'c2\'be\'e7\'bf\'a1\'bc\'ad \'c7\'e0\'bc\'ba\'b1\'ee\'c1\'f6\'c0\'c7 \'ba\'a4\'c5\'cd\'b8\'a6 \'b0\'a1\'c1\'ae\'bf\'c9\'b4\'cf\'b4\'d9.
\f0 \uc0\u8232 		\cf2 float\cf3  distance=\cf4 Vector3\cf3 .Distance(TheSun.position,transform.position);//
\f1 \'c7\'e0\'bc\'ba-\'c5\'c2\'be\'e7 \'bb\'e7\'c0\'cc \'b0\'c5\'b8\'ae
\f0 \uc0\u8232 		\cf2 float\cf3  distanceqube = distance * distance * distance;\uc0\u8232 		\cf4 Vector3\cf3  Gravity = distvector * sunmass * G / distanceqube;//
\f1 \'c1\'df\'b7\'c2\'b0\'e8\'bb\'ea
\f0 \uc0\u8232 		rb.AddForce (Gravity);//
\f1 \'c1\'df\'b7\'c2\'c0\'fb\'bf\'eb
\f0 \uc0\u8232 		
\f2\i \cf5 //	Debug.DrawRay(transform.position, Earth, Color.red);\uc0\u8232 
\f0\i0 \cf3 		\}\uc0\u8232 	\}\u8232 	
\f2\i \cf5 //using UnityEngine;\uc0\u8232 
\f0\i0 \cf3 	
\f2\i \cf5 //using System.Collections;\uc0\u8232 \u8232 
\f0\i0 \cf3 	
\f2\i \cf5 //public class GravityRigidbody : MonoBehaviour \{\uc0\u8232 
\f0\i0 \cf3 	
\f2\i \cf5 /*	public Transform target;\uc0\u8232 	public float speed;\u8232 	void Start()\{\u8232 	\}\u8232 	void Update() \{\u8232 		Vector3 targetDir = target.position - transform.position;\u8232 		float step = speed * Time.deltaTime;\u8232 		Vector3 newDir = Vector3.RotateTowards(transform.forward, targetDir, step, 0.0F);\u8232 		Debug.DrawRay(transform.position, newDir, Color.red);\u8232 		transform.rotation = Quaternion.LookRotation(newDir);\u8232 	\}\u8232 \}*/\u8232 }